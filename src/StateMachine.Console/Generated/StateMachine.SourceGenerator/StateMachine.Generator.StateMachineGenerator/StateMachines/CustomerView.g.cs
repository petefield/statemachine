//Autogenerated 27
namespace CustomerStateManagement.Domain.Customer;
public partial class CustomerView : StateMachineBase<CustomerView, CustomerState> 
{
	protected override List<ITransition<CustomerView, CustomerState>> Transitions => [
		 new Transition<DetailsProvided, CustomerView, CustomerState>(CustomerState.Suspect, CustomerState.Applicant, null, ""),
		 new Transition<RiskCheckPassed, CustomerView, CustomerState>(CustomerState.Applicant, CustomerState.Verified, null, ""),
		 new Transition<SimplfiedCheckDone, CustomerView, CustomerState>(CustomerState.Applicant, CustomerState.Known, null, ""),
		 new Transition<ApplicationFraudDetected, CustomerView, CustomerState>(CustomerState.Applicant, CustomerState.Blacklisted, null, ""),
		 new Transition<AccountOpened, CustomerView, CustomerState>(CustomerState.Verified, CustomerState.Customer, null, ""),
		 new Transition<AccountOpened, CustomerView, CustomerState>(CustomerState.Customer, CustomerState.Customer, null, ""),
		 new Transition<AccountClosed, CustomerView, CustomerState>(CustomerState.Customer, CustomerState.Former, (subject, evt) =>  subject.AccountsHeld == 0, "subject.AccountsHeld == 0"),
		 new Transition<AccountClosed, CustomerView, CustomerState>(CustomerState.Customer, CustomerState.Customer, (subject, evt) =>  subject.AccountsHeld != 0, "subject.AccountsHeld != 0"),
		 new Transition<InvestigationStarted, CustomerView, CustomerState>(CustomerState.Customer, CustomerState.UnderInvestigation, null, ""),
		 new Transition<InvestigationCompleted, CustomerView, CustomerState>(CustomerState.UnderInvestigation, CustomerState.Customer, (subject, evt) =>  evt.Outcome == true, "evt.Outcome == true"),
		 new Transition<InvestigationCompleted, CustomerView, CustomerState>(CustomerState.UnderInvestigation, CustomerState.Blacklisted, (subject, evt) =>  evt.Outcome == false, "evt.Outcome == false"),
		 new Transition<DeathReported, CustomerView, CustomerState>(CustomerState.Customer, CustomerState.ReportedDeceased, null, ""),
		 new Transition<DeathConfirmed, CustomerView, CustomerState>(CustomerState.ReportedDeceased, CustomerState.Deceased, null, ""),
		 new Transition<DeathReportedFalse, CustomerView, CustomerState>(CustomerState.ReportedDeceased, CustomerState.Customer, null, ""),
		 new Transition<AccountOpened, CustomerView, CustomerState>(CustomerState.Former, CustomerState.Customer, null, ""),
		 new Transition<RightToBeForgotten, CustomerView, CustomerState>(CustomerState.Former, CustomerState.Forgotten, null, ""),
	];
}
